

@model Travista.Models.Domain.Destination;
@using Travista.Controllers;
@using Travista.Models.Domain;
<head>
    <link rel="stylesheet" href="~/css/colorway.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/detailscarousel.css" asp-append-version="true">
    <link rel="stylesheet" href="~/css/weather.css" asp-append-version="true">
</head>

<html>
    <body>
    <div class="container">
        <div class="row">
            <div class="slider col">
                <div class="slides">
                    @{

                        List<Images> images = Model.Images.ToList();
                        Random random = new Random();
                        var randomlyOrderedImages = images.OrderBy(image => random.Next());
                        List<Images> top4RandomImages = randomlyOrderedImages.Take(4).ToList();

                        int countSlides = 0;

                        foreach(var tempimg in top4RandomImages)
                        {
                            countSlides++;
                            <div class="slide @((countSlides == 1 ? "active" : ""))" id="slide-@countSlides">
                                <img src="@Url.Content(tempimg.ImagePath)" class="rounded-3" alt="image-@countSlides">
                            </div>
                            if(countSlides > 4)
                            {
                                break;
                            }
                        }

                    }
                </div>

                <div class="controls mt-3">

                    @{
                        int countControl = 0;

                        foreach(var tempimg in top4RandomImages)
                        {
                            countControl++;
                            <button id="button-1" class="button rounded-3 me-2">
                                <div class="picture-card card-img-top square-image">
                                    <img src="@Url.Content(tempimg.ImagePath)" class="img-fluid picture-card__image" />
                                </div>
                            </button>
                            if (countControl > 3)
                            {
                                break;
                            }
                        }
                    }
                </div>
            </div>

            <div class="col" style="margin: 2rem 0px;">
                <h1 class="txtcolor">@Model.Emri</h1>
                <h4 class="txtsec mt-2">@Model.Tag</h4>
                <div class="txtmain mt-2">
                    @if (Model.Reviews.Any())
                    {
                        double averageRating = Model.Reviews.Average(review => review.Rating);
                        int countRating = Model.Reviews.Count();
                        int parsedAvgRating = Convert.ToInt32(averageRating);
                        <div class="star-rating">
                            <span class="fa fa-star @((parsedAvgRating >= 1 ? "checked" : ""))"></span>
                            <span class="fa fa-star @((parsedAvgRating >= 2 ? "checked" : ""))"></span>
                            <span class="fa fa-star @((parsedAvgRating >= 3 ? "checked" : ""))"></span>
                            <span class="fa fa-star @((parsedAvgRating >= 4 ? "checked" : ""))"></span>
                            <span class="fa fa-star @((parsedAvgRating >= 5 ? "checked" : ""))"></span>
                            (<span class="fw-bold">@averageRating Rating</span>) <span class="fw-bold">· </span>@countRating Reviews
                        </div>
                    }
                    else
                    {
                        <p class="txtmain mt-2">You were at <strong>@Model.Emri</strong>? Then leave your <a href="@Url.Action("AddUserReview", "Review", new { clickedDest = Model.ID_Destination })"><i class="fa-solid fa-pen" style="margin-right: 5px;"></i>Review</a> here!</p>
                    }
                    <h6 class="mt-2 txtsec">Created by - @Model.FK_Users.Fullname</h6>
                    <hr />
                </div>

                <div class="address txtmain">
                    <div class="txtsec">City Name:</div>
                    <h5>@Model.FK_City.name</h5>
                    <div class="txtsec mt-3">Address:</div>
                    <h5>@Model.Address</h5>
                    <div class ="txtsec mt-3">Additional Address Info:</div>
                    <h5>@Model.AdditionalAddress</h5>
                </div>

                <h5 class="txtmain mt-4">Weather in - <span class="txtcolor">@Model.FK_City.name</span></h5>
                <div class="weather-wrapper txtmain">
                    <div class="weather-card shadow">
                        <div class="weather-icon" id="icon"></div>
                        <h1 class="mb-5 txtmain fw-bold" id="temp">26º</h1>
                        <p class="fw-bold txtmain">@Model.FK_City.name</p>
                    </div>
                </div>

                @{
                    string cityName = Model.FK_City.name;
                }

                <script>

                    var cityFromASP = "@cityName";

                    function fetchWeather(cityName, cardId) {
                        const weather = '9751983c29e2c903a3b00a44308386a4';
                        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${weather}&units=metric`;

                        fetch(apiUrl)
                            .then(response => response.json())
                            .then(data => {
                                const weatherIconElement = document.querySelector('.weather-card .weather-icon');
                                const temperatureElement = document.getElementById('temp');

                                const weatherMain = data.weather[0].main;
                                const temperature = `${Math.round(data.main.temp)}°`;

                                if (weatherMain === 'Clear') {
                                    weatherIconElement.classList.add('sun');
                                } else {
                                    weatherIconElement.classList.add('cloud');
                                    weatherIconElement.innerHTML = '<i class="fa-solid fa-cloud biggericon"></i>';
                                }

                                temperatureElement.textContent = temperature;
                            })
                            .catch(error => console.error('Error fetching weather data:', error));
                    }

                    fetchWeather(cityFromASP);
                </script>
            </div>
        </div>

        <hr class="txtmain"/>

        <h1 class="mt-4">Exploring <span class="txtcolor">@Model.Emri's</span> Insights and Impressions:</h1>

        <nav class="container navbar navbar-expand-lg navbar-dark nav-seccolor">
            <div class="collapse navbar-collapse d-lg-flex">
                <ul class=" navbar-nav col-lg-6 ">
                    <li class="nav-item"><a class="nav-link"><button class="primary btn txtmain" id="scrollToD">Description</button></a></li>
                    <li class="nav-item"><a class="nav-link"><button class="primary btn txtmain" id="scrollToR">Reviews</button></a></li>
                </ul>
            </div>
        </nav>

        <section id="scrollToDesc">
            <h2 class="mt-4">Journeying Through <span class="txtcolor">@Model.FK_Users.Fullname's</span> Perspective:</h2>
            <div style="white-space: pre-line;" class="txtmain">
                @Model.Description
            </div>
        </section>

        <hr class="txtmain" />

        <section id="scrollToRev" class="mt-4">
            <h2 class="txtmain mb-4">Discovering the Voices of Fellow <span class="txtcolor">Reviewers.</span></h2>
            @if (Model.Reviews.Any())
            {
                <div class="accordion mb-5" id="accordionExample">
                    @{
                        int countRevs = 0;
                        foreach (var Reviews in Model.Reviews)
                        {
                            <div class="accordion-item">
                                <h2 class="accordion-header btncolor">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(Reviews.ID_Reviews)" aria-expanded="@((countRevs == 1 ? "true" : null))" aria-controls="collapse@(Reviews.ID_Reviews)">
                                        <div class="fw-bold">@Reviews.FK_Users.Fullname's Review for @Reviews.FK_Destination.Emri (Rated for @Reviews.Rating Stars)</div>
                                    </button>
                                </h2>
                                <div id="collapse@(Reviews.ID_Reviews)" class="accordion-collapse txtmain collapse @((countRevs == 0 ? "show" : null))" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <div class="star-rating">
                                            <span class="fa fa-star @((Reviews.Rating >= 1 ? "checked" : ""))"></span>
                                            <span class="fa fa-star @((Reviews.Rating >= 2 ? "checked" : ""))"></span>
                                            <span class="fa fa-star @((Reviews.Rating >= 3 ? "checked" : ""))"></span>
                                            <span class="fa fa-star @((Reviews.Rating >= 4 ? "checked" : ""))"></span>
                                            <span class="fa fa-star @((Reviews.Rating >= 5 ? "checked" : ""))"></span>
                                            <span class="fw-bold">(Awarded @Reviews.Rating Stars)</span> <span class="fw-bold">· </span>[Date of Review - @Reviews.Review_Date]
                                        </div>
                                        <div style="white-space: pre-line;" class="txtmain">
                                            @Reviews.Comment
                                        </div>
                                    </div>
                                </div>
                            </div>
                            countRevs++;
                        }
                    }
                </div>
            }
            else
            {
                <h4 class="txtmain">There are no reviews :(</h4>
                <p class="txtmain">You were at <strong>@Model.Emri</strong>? Then leave your <a href="@Url.Action("AddUserReview", "Review", new { clickedDest = Model.ID_Destination })"><i class="fa-solid fa-pen" style="margin-right: 5px;"></i>Review</a> here!</p>
            }
        </section>


    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/popperjs/core/dist/umd/popper.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="~/js/car.js"></script>
    <script src="~/js/scroll.js"></script>

    </body>
</html>